PyCon APAC 2015 - Day 1 (June 5)

This pad text is synchronized as you type, so that everyone viewing this page sees the same text.  This allows you to collaborate seamlessly on documents!

Back To Future: PyCon APAC 2015 - Day 2 (June 6) 

            PyCon APAC 2015 Day 3 June 7
官方開的Gitter:  https://gitter.im/pycontw/pyconapac2015

[9:10][R0] Keynote: Ecosystem Threats to Python (Van Lindberg)

主要是討論各種語言的ecosystem來探討python ecosystem的弱勢和優勢

I see dead code! <- I cannot interoperate

Java
Why Java?
- The corporate Machine
- The JVM
- The Apache Software Foundation
- Android
- Big Data
... Acceptable hackerness
Javascript
Why Javascript
- Ubiquity
- Gmail
- Chrome and the Virtual Machine race
- Javascript, the Good Parts
- Evented/Async from the ground up
- JSON  
... Acceptable hackerness
Go
only have static binary
bottom-up for multi-core use
Why Go?
- Rob Pike and Google
- Pragmatic, small, "fit your brain"
- Channels and Goroutines
- High level datatypes
- gofmt https://golang.org/cmd/gofmt/
- go run https://github.com/erning/gorun
- Deployment
- Speed
Python
What’s wrong with Python?

Multic
Why Python?

Broad ecosystem
Pragmatic "fits your brain"
Teaching language ==> Ex. in UK
The PyPy R&D division
Python3
Python is the Python Community. (Not only a language)

find some one who writes a library, and say thanks
Try to meet others to make you stronger each everyday
Thank you
---------------- Break ----------------

[10:00][R0] Openstack Swift Benchmark with Ansible (Charles Hsu)

今天主要的要講如何 Benchmark Swift(Openstack)

Swift是一個Cloud Storage Software

可以讓你輕易用RESTful api 去管理你的cloud storage

非常適合儲存unstructure的data，例如音樂、影片

Swift: Distributed, HA, Eventually Scalable Object storage for OpenStack.

Swift

  - Distributed data

  - Highly available

  - Eventually consistent

Client -> Load Balancer -> Proxy Server(Select closest Region) -> Object Server(To All Region) -> Store 3 replica

OpenStack Swift

  - The Ring

    - Enhanced Consistent Hashing Ring

    - A data structure to map data to physical location on disk

  - Storage Policies

  - Proxy-server

  - Account-server

  - Container-server

  - Object-server

Storage Policies

 - Durability

   - 2x replication or 3x replication

   - Erasure Coded

 - Performance

   - SSD vs General disk

 - Groups of Nodes and Disks

 - Different storage implementation

 - Others

Components: 

 - Container: A group of objects with an account 

    - Object: the actual data

How does Swift work?

  - Swift API:

    - ex: https://swift.tw.pycon.org/v1/AUTH_acct/contianer/object/

Regular CRUD

Support 8k metadata

Ansible 是個很美妙的tool both for deployment and management

https://github.com/ansible/ansible

Invertory file (host list)
 Server0[1:5]
Playbook (類似installation script的東西)
$ ansible-playbook site.yml -i cluster.conf
Support shebang 
#!/usr/local/env ansible-playbook
Why Ansible?

simple
agent-less
ssh only
no additional packages
written in python
Can hook python library, but unstable
少用 hook，因為版本變動太快，過一陣子 hook 可能就不能用，建議用 Playbook
根據統計圖表 Ops 多用puppet 但是在 developer side Ansible已經接近puppet了

chef 

puppet

ansible

Before benchmark: validate testing environment
Benchmark

How many requests the cluster able to handle?
Limitation (CPU/Network/Disk)
The cost-performance ratio
Tools

Swift-bench (Community, Ptyhon) 
COSBench (Intel, java)
SSBench (SwiftStack, Python)
System tools

iftop
ipref
htop
vmstat
Test scenarios

Swift turning

Network Turning

Link Aggreation
LACP 設定錯誤會影響效能
Split network 
Swift Cluster

Network topology -- find the bandwidth limitation!
Report

How dose Ansible work with benchmark

Demo

VirtualBox + Ansible + vagrant
Repo: https://github.com/charz/swift-aio
deploy swift AIO
Test
generate CSV report
CI Integration

(using Jenkins to auto generate testing report)
Q&A 

Q:容納量？ A:有客戶到 1.5PB
目前有客戶一年內可以自行從12個nodes extend到24個nodes
[10:00][R1]  When programming functionally in Python (Apua Juan)

Slides
http://slides.com/apuaa-aa/python-fp#/
FP is Hot
facebook uses FP on news feed
C++11 and java8
Some theories
(196x) Domain theory
194x: Category theory
193x: Lambda calculus...
19
19xx: Type theory
Python supports FP(functional programming)....?
python documentation:
"FP HOWTO"
Standard libraries:
itertools
functtools
operators
Language supports:
First class function
Generator
... not enough?
Before discussion...
What we do care is:

The most important thing
"why functional programming matters"
https://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf
Function
Wrong Value 
code exam:
Interprefer language side effect
Generator failure?
code exam:
[10:00][R2] Easy Map Applications Using Python (Victor Gau)

Easy Map Applications Using Python

-Mercator Projection
Tile Systems https://msdn.microsoft.com/en-us/library/bb259689.aspx
Convert lat, long <=> x/y/z
Google Static Maps API https://developers.google.com/maps/documentation/staticmaps/

some limitation (with and without API key)
OpenStreetMap https://www.openstreetmap.org/

Wiki http://wiki.openstreetmap.org/wiki/Main_Page
DIY static map Demo https://github.com/victorgau/PyConApac2015

python -m CGIHTTPServer
Interactive map application

Base Maps => import Folium
Leaflet.js
https://pypi.python.org/pypi/folium
Flask & Flask-GoogleMaps

Flask Hello World
live demo
Real-Time Applications

live demo
google earth 
KML
live demo
---------------- Break ----------------

[11:10][R0]  Python Debugger Uncovered (Dmitry Trofimov)

Speaker is PyCharm developer and team leader.

Develop PyCharm for least 5 years

https://github.com/fabioz/Pydev.Debugger

Why do we need debugger?

Debugging is twice as hard as writing the code.

Python Debuggers:

Implemented in Python
pdb, PyCharm, Pydev
Platform independent: Cython, Jython, PyPy, IronPython
Can be broken by user code 
In C
wimpdb, Wing, gdb (w/ Python mappings)
Works only for CPython
Don’t interact with user code
Tracing Python code with Python

doc `sys.settrace`
Docstring:

Set the global debug tracing function.  It will be called on each
function call.  See the debugger chapter in the library manual.Type:      builtin_function_or_method
Simple Trace Function
Simple Console Debugger

Live demo (in PyCharm)
Drawback of our console debugger

Visual Debugger

Mutiproccess Debugger

Platform dependent solutions only
Stop all threads, acquire GIL, Inject code (via gdb / lldb / ...) to Python Process
Debugging of Django Templates

https://github.com/fabioz/PyDev.Debugger 

Dive into detail: (https://github.com/fabioz/Pydev.Debugger)

Debugger entry point: pydevd.py
Multiprocess: pydev_monkey.py
[11:10][R1] 快快樂樂成為 Coding Ninja (by pytest) (Chun-Yu Tseng)

https://tw.pycon.org/2015apac/en/program/83

*

http://www.slideshare.net/excusemejoe/test-happy
Joe Pycon in 台南

有在寫測試的人請舉手！

定位在入門。

為什麼你不寫測試？

軟體是否符合需求？手動測試＋機器自動化測試

今天要解決 不會寫、懶得寫 兩個問題

有些東西是工程師都覺得很難測的。

利用assert
def make_money (line_of_code)
    return line_of_code*100

assert make_money(10) == 1000
優缺點：

assert 是很實際的方式，但是不實用
2.利用 unittest

import unitest

優缺點：

要寫好多 code 
莫名的 assertEqual Api
滿滿的 old xUnit Style
3.pytest

*

http://www.slideshare.net/excusemejoe/pytest-and-friends

pytest

http://pytest.org/latest/

Assert 打天下

偏好扁平化的方式編織測試程式碼

如何降低重複宣告測試對象數量？

@pytest.fixture (link)

建立測試物件，之後直接使用判斷

pytest 的 fixture 超好用！
Test discovery
Mark system (分群組、skipif)
Parametrized test function
functional testing

用Splinter模擬browser行為，幫助functional testing

https://github.com/pytest-dev/pytest-splinter

Coding Ninja  至少還需要...
其他 testing tool (pytest/ nose/ unittest)
了解 (OO) Design 相關的原則與 Patterns
嘗試看看 TDD/ *DD
Coding Ninja 
最終目的是「開發」
不要過度測試（自己該判斷該不該測）
Q&A:

簡單的 case 不要用 Mock 寫
如果不用 Mock 的話，test coverage 可以達高嗎？
A: 有點模糊的問題，會後討論
Pytest with doctest:
https://pytest.org/latest/doctest.html
怎麼決定什麼測試該寫什麼測試不該寫？
A: 想提昇code的confidence
寫測試比寫文件還實用多，跑一下測試還可以知道這個 function 對不對，還可以讓同事知道這怎麼用。

工商服務：

均一教育平台 - http://junyiacademyhr.weebly.com/
[11:10][R2] Happy rapid prototyping embedded assembly by Python: My Experience (Albert Huang)

Debugging time is longer for assembly prototype in C than in Python

DSP programming - in assembly

Bit-wise arithmetic or branching
Function pointers are used a lot
Global variables
DSP programming - in python

bit-wise is not easy
store function pointer in list
global variables not a problem
Tree Parser Architecture

Parser Engine
stack or not stack version
"Every program is created twice, first in python , then in assembly"

---------------- Break ----------------

[11:50][R0] Programmatic Debugging with GDB and Python (Scott Tsai)

GDB

conditional breakpoint
breakpoint triggers for specific thread
debug multiple process as the same time
Geting a Python Prompt in GDB (no code completion)

$ gdb 

(gdb) python-interactive

>>>

GDB Embeded IPython

> import IPython

> IPython.embed_kernel()

$ gdb -x gdb-ipython.py

$ ipython console --existing kernel-23135.json

gdb.Value and gdb.Type

$ gdb -q /bin/true

>>> v = gdb.parse_and_eval("argc")

>>> v.value

>>> gdb.execute(’file /bin/true’)

>>> gdb.execute(’start’)

>>> gdb.execute(’list’)

>>> gdb.lookup_type(’PyDictObject’).pointer()

<gdb.Type at 0x... >

How source level debugging work

needs debug info(gcc -g)
$ eu-strip -f minimal.debug minimal

CFLAGS="-Wall -O0 -g" python setup.py install

It’s not enabled by default.

Debug info can be in your ELF files?
look for .debug_info section  
or seperate Located by
.gnu_debuglink or
build-id (SHA1 checksum)
Separate Debug Files - Debugging with GDB
Pyelftools - parsing ELF and DWARF (https://github.com/eliben/pyelftools)

$ pip install pyelftools

Anaconda ships with debug info for CPython.

unluckily no debug info for libc.so,etc

GDB Pretty Printers - std::string
lookup function
register function
New GDB convenience functions

(gdb) print $instn_length

multi-processes debugging (relatively new gdb feature)

add-inferior

Debugging Optimized Code

Trouble #1: value <optimized out>
Trouble #2: control flow transformations
Currently, you need to know assembly and get used to reading disassembled code
$ gcc -Os -g3 stack_layout.c -o stack_layout

References:

Exploring the Gdb Python API with IPython (2012-01-31)
[11:50][R1] ZoneIDAProc: Instrumentation-based Dynamic Accessing (Tzung-Bi Shih)

IDAPro → IDAProc → ZoneIDAProc

程式有問題？看 debug log？但問題是 debug message 是有可能被亂搞的。

export interface
accessing internal state
use FUSE
Implementation

Linux proc-like interface (FUSE)
Code instrumentation
Easy version: gdb
Difficult version: ptrace(2)
LSM Yama: CAP_SYS_PTRACE, PTRACE_TRACEME
getter/setter , decorated routing , subprocess.Popen
_PyCode_Instrumentation(FILE_POINTER, ...)

https://github.com/penvirus/ZoneIDAProc

[11:50][R2] Orchestrating the execution of workflows for media streaming service and even more (Shuen-Huei Guan)

Slide

Build a online music streaming system (on AWS)

Simple workflow

Issue 2. Distribute  tasks to the cloud, and use the cloud efficiently

Gearman (job server used by kkbox)
http://gearman.org/
sample encoding workflow for video, a little complicate
Issue 3. workflows would evolve....

(depend on someones’ decisions and real situations)
Let’s save file size and IO (spent too much money in S3)
Let’s make it faster
Let’s add some more profiles
Let’s fix some encoding
Issue 4. Gearman server down!

Factors we like to pay much attention in
Encoding workflow
Tasks distributing across machines on cloud
Sever maintenance (no HR for maintenance)
What Google suggest us...
Apache Kafka, Mesos, ....
Gearman
Luigi by Spotify https://github.com/spotify/luigi
Celery
Potentially all
AWS simple workflow (SWF) http://aws.amazon.com/tw/swf/
(the first point for this talk)
worker and decider
Decider defines the workflow
We still need to write workflow logic in decider
Job script for a workflow
What is exactly Job script

還權於民
Make it pythonic if that makes developers happier

Status

Technical status

Fault tolerance by retry. [decider]
Workflow/task has priorities. [SWF]
try .. except..finally mechanism.
[-whendone, -whenerror, -precmds, -postcmds, ...]
Question: Are you interested in this project?

To do:

Use JSON or YAML for job script
A viewer to see the progress of workflows
Replace SWF by Apache Mesos or Mistral
---------------- Lunch Break ----------------

[13:30][R0] Keynote (Kenneth Reitz)

出現了古埃及的壁畫圖

在探討著溝通的進化史

使用python的請舉手！！！

M2M(Many-to-Many) - internet

會場使用 Python2/Python3  比例約5:1（吧)

Zen of Python

>>> import this

Python is a beautiful language

Afraid of Python splits 2 part:

python 2 v.s. python 3 python社群被切分開來了

the ratio of python 2 and python 3 (81:3)

Unicode, Codes & Friends.

The Standard Library is broken.

Core developers (Python 3) <-----------> Python Community (Python 2)

The Current Duality

Library maintainers have no double their efforts to support both Python2 & Python3
Core Maintainers will continue working in a vacuum, furthering separateness & division.
New users will keep coming to Python3 & Python2 will slowly attrit into nothing.
A Year of PyPI Downloads - 20 April 2015

https://caremad.io/2015/04/a-year-of-pypi-downloads/
python 3 下載量在增加了!
從今天開始使用python3吧！

---------------- Break ----------------

[14:20][R0] The Future of GUI Programming with Python (Tzu-ping Chung)

(講場調整：R0 R2 對調，這邊的順序是對的)

https://uranusjr.com

需求

Native UI and UX
Portabilty
      Ease to deploy

      Pythonic API

  

Tkinter

- native nowhere
（一致性的怪）
Themed Tk
- Lean, buy may be lacking

Platform-specific

PyObjC ON OS X(Cocoa)
Win32api on Windows
PyGObject on Gnome (GTK+)
Native UI/UX
Needs to deploy C binding
Very weird API
 

Special Interpreters

.NET via IronPython (Windows)
AWT/Swing via Jython
Werid API
Compatibility 
Binding to Third-party

PyQt and PySide to Qt
wxPython to wxWidgets 
Works quite natively
Cross-platform application code
Werid API
Needs to deploy tons of things
The Solution (IMO)
Dynamic binding to native GUI
CPython compatibility
No non-Python dependencies
Wrapper API on top
The Binding
Foreign function interface
libffi
ctypes
CFFI, anyone?
Toga

http://pybee.org/toga/

Difficulties
API design
Platform knowledge
UI Layout
Autolayout
Toga 尚未完成(不支援windows)
No win32 api example.
Mobile

Problems
Python
Different paradigms
"The Store"
Mobile Support
C API availability
Deploy
Paradigm mismatch http://lwn.net/Articles/640625/
[14:20][R1] Future Development of PyCON in Asia Pacific (Sammy Fung)

Hackpad: Future development of PyCON  in Asia Pacific 

Size does matter for APAC holding.
US Model: several key members, the staff cross all over the US.
Local sponsorships are very complex.
Recent change of PSF: driven by building (new) working groups.
[14:20][R2] 教練，我要做自己的 Django package (Tim Hsu)

What is Django?

Django is like a middleware
Battery included

template filter, tag....
What is Django app

Django app is a python package
What a Django app can do

When to write a reusable app

Code reuse
What package Tim ever makes

Style Guide
Responsive Viewer
Types of reusable app

A part of a site, configured by all app
Extra urls, Extra views (Ex: Django rest framework)
Reusable components
Monkey patch (替換抽層，把部分django core改成自己需要的 / 或用別人寫好的)
Static Assets ( Ex: Django Bootstrap)
Monkey Patch

BruteBuster can limit the time of error login
Extra url patterns

Django rest framework (router is different with the original Django)
django-kss-styleguide (a app written by Tim.)

Django admin is coooooooooooool

register your model in admin.py
How to import module automatically?

admin/__init.py__
autodiscover is called in project’s urls.py
autodiscover module is mean ito internal usage
other app act lke Django admin write their own autodiscover
What I learn?

Keep settings as simple as possible
Study other good packages with open source project

---------------- Break ----------------

[15:10][R0] RPyScan (Melvin Foo)

https://github.com/MelvinFMQ/raspyscanner

speech slide: https://goo.gl/dHJzNS

[15:10][R1] Network Security and Analysis system with Python (Lee Yang)

Deep packet inspection

Detect protocol via constant and enumeration

Detecting constants fields and enumerations fields to learn about protocol format 

constant: bytes that do not change data in all packets in a single protocol 
enums: bytes at fixed positions that change only slightly or has a limited number of values 
https://plot.ly/~lee.yangpeng
Data collection via [Wireshark](https://www.wireshark.org/)

[15:10][R2] Tagtoo Task Manager (Chien-Hsun Chen)

http://slides.com/georgefs/task-manager-3

用戶分析
傳統作法: cron job
task具關連性 -> 需要有錯誤處理
task避免重複執行
task要能從shell傳入參數
Luigi Task
output, requires, run
最後就找到了Luigi來用

（剛剛KKBOX那一場也有提到 但是他們後來沒有用 因為是競爭對手）

task manager = CICD概念 + docker + Luigi

感覺跟Jenkins的功能很像.. 
Would using Jenkins as a trigger and pipeline in docker is better?
好青年喬治升格為好男人喬治

Final goal：task連同執行環境變成自動產生並加上pipeline

Need information of this project(open source online?) 

https://github.com/Tagtoo/TaskManager (still prototyping)

---------------- Break ----------------

[15:50][R0] MMO Game Server Design with Twisted Python (Dan Maas)

thunderrun.com

"Builder RTS" games

Topic

System architecture
How to write an asynchronous HTTP server?

Game = Engine + Data + Art

engine: server, client, analytics
game data: units, building, items
art: images, sounds
Engine：

Client / Server web.app
Client side js/HTML5 canvas
Analytic system (SQL map/reduce)
client send request (by HTTP) to run game actions

upgrade this building
produce this unit
buy this thing from store
server check requirements, if OK, 

Server requirements:

High Scale
Low Latency < 200ms（別讓玩家不開心~）
Server implementation:

Twisted Asynchronous HTTP server
Cluster on Amazon EC2
support 100 online players per CPU core (scale by adding more core)
What is Twisted https://twistedmatrix.com/trac/

Networking library
Asynchronous event loop
Supports many internet protocols

consistent Python API
Easy to extend with custom classes
Asynchronous server 可解決synchronous server 產生的問題(別讓玩家不開心的問題)

Synchronous(fast)

1ms-100ms
change state in memory or make fast database query
examples: Add damage, buy item
"Fast" request 使用 synchronous
"Slow" request 使用 asynchronous (100 ms ~ 10 seconds)
Reading/ writing Amazon S3
Option 1: Deferred callbacks

Option 2: @inlineCallbacks

Hints & Tips

Monitor in-flight requests
Need a "bookkeeper"
Asynchronous frameworks are bad at this
Handle failure/ cancel paths
Asynchronous code is hard to write. Don’t panic :)
Latency Profiling

Important metric is not CPU usage, but request latency
Especially maximum request latency
Server Latency

--|------|--------===========---====--

---timeline ->

Collect data on each request:

Average latency (performance hotspot)
Maximum latency (latency hotspot)
Watch total "unhalted" time

What % of the time the CPU is waiting for next request?
50% = danger! (你接近 live lock 的問題)
如果這個數值太高的話，通常我們會再趕緊加 CPU，以免 server 爆掉~
Q&A 

Q: 請問你們是在用哪一種資料庫儲存的？哪些是sync哪些是async?

A: Asynchronous 存在 Amazon S3 內; Synchronous 存在 mongo DB 

Q: Why 不用 Gevent, 而是用 Twisted?

A: Gevent 比較沒有那麼完整，Twisted 在當時有 (5 年前) 比較完整的功能，如果現在要再重新寫，我可能會再考慮其他選擇。

:D

[15:50][R1] Millions way to avoid overfitting when building a portfolio (Chia-Yi Yen)

Probability of Backtest Overfitting http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2326253

Combinatorial Symmetric Cross Validation procedure

same testing and training dataset size -> larger sample size

symmetric -> poor performance would not come from the selection of testing data set

"8 choose 4" (and google understands this)

[15:50][R2] How to scale up your Web Apps/Sites written by Python? (Theon Lin)

席恩

Web Apps

V1 : web + db + cdn
V2: scale + lbs + monitor
V3: cache
V3.1: task queue for heavy task
V4: on the cloud
Design for scale.

Scale is more like to building trains and rails.

You have to design your architecture scale to make it scale
Scale is more important than performance
Simple is the best
---------------- Day 1 End ----------------

PyCon/Python News

2015/6/3 IThome PyCon二度登臺，亞太Python高手周末齊聚南港

2015/5/8 udn聯合新聞網 國三生：也曾想上建中、台大，但寫程式讓我和家人完全改觀！

2015/2/4 PyCon APAC/TW blog PyCon Asia-Pacific 2015 in Taiwan - Save the Date

2014/10/27 PunNode PyCon APAC 年會 6 月在台盛大舉行，探索 Python 從海洋到太空的無限潛力

2014/10/12 ptt Soft_Job [閒聊] 分享Python 在學業界有寫什麼 - 批踢踢實業坊

PyCon APAC/TW Twitter: @PyConTW